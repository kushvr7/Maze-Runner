{"version":3,"sources":["InputFile/Input.js","Head/Header.js","Info/InfoD.js","App.js","serviceWorker.js","index.js"],"names":["Input","props","useState","n","fix","setfix","type","className","onChange","event","l","target","value","onClick","gete","Header","InfoD","sty","display","set","style","id","App","len","row","setrow","mat","grid","setgrid","stt","setstt","bgclo","vi","vis","setvis","h","hid","sethid","obs","start","end","dec","setdec","s","v","myarr","me","i","ar","j","push","pa","table","children","backgroundColor","width","height","borderRadius","transition","u","sr","BFS","x","y","a","b","xa","shift","ya","setTimeout","length","DFS","DFA","disp","fo","alx","q","w","dx","dy","rt","sx","sy","cc","yy","c","op","val","ind","indd","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4cf410f5.chunk.js","sourcesContent":["import React , {useState} from 'react';\r\nimport './Input1.css';\r\n\r\nfunction Input(props) {\r\n\r\n\r\n  const [fix, setfix] = useState({\r\n        n :'',\r\n  });\r\n    \r\n\r\n  const chn = (event) => {\r\n      let l = event.target.value;\r\n\r\n    setfix({\r\n        n:l,\r\n     });\r\n\r\n  };\r\n\r\n//   console.log(\"fix   \"+ fix.n);\r\n    return (\r\n        <div>\r\n           <span> Row :</span> <input type=\"text\" className=\"inp1\" onChange={chn} /><br/>\r\n            <button onClick ={ () => props.gete(fix.n)}>BUILD MAZE</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react';\r\nimport './heade.css';\r\nfunction Header() {\r\n    return (\r\n        <div >\r\n          <div className=\"hed\">\r\n              <div className=\"he\"></div>\r\n              <p>The Maze</p>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport './Infoc.css';\r\nfunction InfoD(props) {\r\n\r\n    const sty = {\r\n        display : props.set,\r\n    }\r\n\r\n    return (\r\n\r\n       \r\n\r\n\r\n        <div style={sty} id=\"d1\">\r\n            <p id=\"p1\">Instructions :</p>\r\n            <span className=\"cal\">(&nbsp;&nbsp; <span className=\"grap\">BFS & DFS</span> Algorithm used in the Project as major backbone &nbsp;&nbsp;  ) </span>\r\n            <ul>\r\n                <li><span id=\"r\" className=\"com\">RED :&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span className=\"cont\">are the Obstacles dynamically created</span>  </li>\r\n                <li><span id=\"b\" className=\"com\">BLUE :</span> <span className=\"cont\"> is the Start self choosen</span>  </li>\r\n                <li><span id=\"g\" className=\"com\">GREEN :</span> <span className=\"cont\"> is the Exit self choosen </span> </li>\r\n                <li><span id=\"gry\" className=\"com\">GREY :</span> <span className=\"cont\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; is the Traversed path by the algorithm </span> </li>\r\n             </ul>\r\n             <p id=\"p2\">\r\n               Firstly provide the size of maze in <span className=\"ro\">Row</span> input field above and start .  Place every required component as per your choice . After placing entry , exit and hurdles press button <span className=\"sea\">( Search )</span>.\r\n                 It will traverse the provided grid and eventually result into the Path to exit and hence the Maze will be solved with \r\n                 the path shown in  <span id=\"gol\">GOLD</span> . \r\n             </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoD\r\n","import React , {useState} from 'react';\r\nimport './App.css';\r\nimport Inp from './InputFile/Input'; \r\nimport Hee from './Head/Header'; \r\nimport Radium from 'radium';\r\nimport Inf from './Info/InfoD';\r\n\r\nfunction App() {\r\n \r\nconst [row , setrow] = useState({\r\n  len : 0,\r\n});\r\n\r\nconst [grid , setgrid] = useState({\r\n  mat: [],\r\n});\r\n\r\nconst [stt , setstt] = useState({\r\n  sty: [],\r\n});\r\n\r\n\r\nconst [clo , setclo] = useState({\r\n  bgclo: \"black\",\r\n});\r\n\r\nconst[vis,setvis] = useState({\r\n vi:[]  \r\n})\r\n\r\nconst[hid,sethid] = useState({\r\n  h:\"\"\r\n});\r\n\r\n// setclo({\r\n//    for\r\n// });\r\n\r\nconst [dec , setdec] = useState({\r\n      obs:0,\r\n      start:0,\r\n      end:0\r\n});\r\n//==========================================\r\n\r\n\r\n\r\n//====================================================================\r\n          //  SETTER METHOD\r\n\r\n     const setterO = () =>{\r\n       setdec({\r\n         obs : 1,\r\n         start:0,\r\n         end:0\r\n       });\r\n\r\n     }     \r\n\r\n     const setterS = () =>{\r\n      setdec({\r\n        obs : 0,\r\n        start:1,\r\n        end:0\r\n      });\r\n \r\n    }     \r\n\r\n\r\n    const setterE = () =>{\r\n      setdec({\r\n        obs : 0,\r\n        start:0,\r\n        end:1\r\n      });\r\n\r\n    }     \r\n\r\n\r\n//=====================================================================\r\n// console.log(dec.obs);\r\n\r\n   const s =[];\r\n   const v=[];\r\n//=====================================================================\r\nconst myarr =[];\r\n\r\n  const getp = (val) => {\r\n\r\n    let len = val;\r\n    \r\n      setrow({\r\n        len : val,\r\n      });\r\n\r\n      // for(let r = 0;r<row.len;r++)\r\n      // {\r\n      //   let rt = [];\r\n      //   s.push(rt);\r\n      // } \r\n\r\n      for(let i=0; i < len; i++){\r\n        let rt=[];\r\n        for(let j=0; j < len; j++){\r\n        rt.push(\"black\");\r\n        }\r\n        s.push(rt);\r\n      }\r\n   \r\n       for(let i=0; i < len; i++){\r\n    let rt=[];\r\n    for(let j=0; j < len; j++){\r\n    rt.push(0);\r\n    }\r\n    v.push(rt);\r\n  }\r\n\r\n\r\n    for(let i=0; i < len; i++){\r\n      let row = [];\r\n      myarr.push(row);\r\n    }\r\n  \r\n    for(let i=0; i < len; i++){\r\n      for(let j=0; j < len; j++)\r\n      myarr[i].push(0);\r\n    }\r\n\r\n    setgrid({\r\n      mat : myarr,\r\n    });\r\n\r\n   setvis({\r\n      vi:v\r\n   });\r\n   \r\n  sethid({\r\n    h:\"none\"\r\n  })\r\n\r\n\r\nsetstt({\r\n sty : s,\r\n});\r\n\r\n// console.log(s);\r\n  \r\n  }\r\n\r\n  // console.log(stt.sty[0][1]);\r\n  //==========================================\r\n  // const vis = [];\r\n  \r\n  // for(let i=0; i < row.len; i++){\r\n  //   let rt=[];\r\n  //   for(let j=0; j < row.len; j++){\r\n  //   rt.push(0);\r\n  //   }\r\n  //   vis.push(rt);\r\n  // }\r\n\r\n//=============================================\r\n\r\n  const set = (u , v ) => {\r\n    //  console.log( \"x co- \"+ u +\"  y co -  \"+ v);\r\n// const matt = [];\r\n  // console.log();\r\n    if(dec.obs == 1 && dec.start == 0 && dec.end == 0)\r\n    {\r\n\r\n      for(let i=0;i<row.len;i++)\r\n      {\r\n        for(let j=0;j<row.len;j++)\r\n          {\r\n            if(u == i && v == j)\r\n             {\r\n               grid.mat[i][j] = 2;\r\n                stt.sty[i][j] = '#b31929';\r\n                let sr = stt.sty;\r\n              setstt({\r\n                sty : sr,\r\n              })  \r\n                // console.table(stt.sty);\r\n             }\r\n          }\r\n      }\r\n\r\n    }\r\n\r\n\r\n//=================================\r\n       //   set  end \r\n   \r\n       \r\n    if(dec.obs == 0 && dec.start == 0 && dec.end == 1)\r\n    {\r\n\r\n      for(let i=0;i<row.len;i++)\r\n      {\r\n        for(let j=0;j<row.len;j++)\r\n          {\r\n            if(u == i && v == j)\r\n             {\r\n               grid.mat[i][j] = 3;\r\n               stt.sty[i][j] = '#257e3a';\r\n               let sr = stt.sty;\r\n               setstt({\r\n                 sty : sr,\r\n               })  \r\n              //  console.table(stt.sty);\r\n             }\r\n          }\r\n      }\r\n\r\n    }\r\n\r\n//===============================\r\n     // set start \r\n\r\n     \r\n    if(dec.obs == 0 && dec.start == 1 && dec.end == 0)\r\n    {\r\n\r\n      for(let i=0;i<row.len;i++)\r\n      {\r\n        for(let j=0;j<row.len;j++)\r\n          {\r\n            if(u == i && v == j)\r\n             {\r\n               grid.mat[i][j] = 1;\r\n               stt.sty[i][j] = '#0d5fbc';\r\n               let sr = stt.sty;\r\n               setstt({\r\n                 sty : sr,\r\n               })  \r\n              //  console.table(stt.sty);\r\n              //  style.backgroundColor=\"green\";\r\n             }\r\n          }\r\n      }\r\n      // setclo({\r\n      //   bgclo:\"grey\"\r\n      //   });\r\n\r\n    }\r\n\r\n\r\n//=================================\r\n\r\n\r\n      // console.table(grid.mat);\r\n\r\n  }\r\n\r\n\r\n//================================================\r\n\r\n    var me = [\r\n  \r\n    ];\r\n  // var mez = [row.len][row.len];\r\n  for(let i = 0 ; i < row.len;i++)\r\n  {\r\n    let ar = []; \r\n    // me[i] = [];\r\n    for(let j=0;j<row.len;j++)\r\n      {  \r\n        ar.push(0);   \r\n    \r\n//  console.log(me[i][j]);\r\n     \r\n  }\r\n      me.push(ar);\r\n      // console.log(me);\r\n}\r\n\r\nvar pa = [\r\n  \r\n];\r\n// var mez = [row.len][row.len];\r\nfor(let i = 0 ; i < row.len;i++)\r\n{\r\nlet ar = []; \r\n// me[i] = [];\r\nfor(let j=0;j<row.len;j++)\r\n  {  \r\n    ar.push(0);   \r\n\r\n//  console.log(me[i][j]);\r\n \r\n}\r\n  pa.push(ar);\r\n  // console.log(me);\r\n}\r\n\r\n//============================================\r\n\r\n\r\n\r\n\r\n\r\n//=================================================\r\n\r\nlet table = []\r\n// function ta(){\r\n  // const ta = () => {\r\n// Outer loop to create parent\r\nif(row.len > 0){\r\nfor (let i = 0; i < row.len; i++) {\r\n  let children = []\r\n  //Inner loop to create children\r\n  for (let j = 0; j < row.len; j++) {\r\n     let c = `s[${i}][${j}]`;\r\n    //  console.log(s[{i}][{j}]);\r\n    children.push(<td ><button style={{backgroundColor : stt.sty[i][j], width:\"40px\" , height:\"40px\",borderRadius:\"50%\",transition: \"0.7s\"}} onClick={ () => set(i , j) }></button></td>)\r\n    // children.push(<td ><button style={`sty${i}${j}`} onClick={ () => set(i , j) }>({i},{j})</button></td>)\r\n  }\r\n  //Create the parent and add the children\r\n  table.push(<tbody><tr>{children}</tr></tbody>)\r\n}\r\n}\r\n// }\r\n\r\n\r\n//====================================================\r\n// const vis ;\r\n   const find = () =>{\r\n   \r\n    //  console.log(stt.sty[0][0]);\r\n\r\n      for(let ind=0;ind<row.len;ind++)\r\n      {\r\n        for(let indd =0;indd<row.len;indd++)\r\n        {\r\n             if(grid.mat[ind][indd] == 1){\r\n                    BFS(ind , indd);\r\n                    DFS(ind,indd);\r\n                    // vis = grid.mat;\r\n                  }\r\n        }\r\n      }\r\n\r\n\r\n   }\r\n\r\n\r\n   const BFS = (x , y) =>{\r\n    //  const q = new Queue()\r\n     let a = [];\r\n     let b = [];\r\n     a.push(x);\r\n     b.push(y);\r\n   pa[x][y] = 0;\r\n      \r\n\r\n\r\n     while(a.length != 0 || b.length != 0){\r\n       let xa = a.shift();\r\n       let ya = b.shift();\r\n        me[xa][ya] = 1;\r\n  // setTimeout( () => {\r\n\r\n        if(xa - 1 >=0 && xa - 1 < row.len){\r\n        if(me[xa - 1][ya] == 0 && grid.mat[xa - 1][ya] == 0){\r\n            me[xa - 1][ya] = 1;\r\n            a.push(xa - 1);\r\n            b.push(ya); \r\n            pa[xa - 1][ya] =  1 + pa[xa][ya];   \r\n            // stt.sty[xa - 1][ya] = '#6f827a';\r\n              //  let sr = stt.sty;\r\n               setTimeout(() => {\r\n                stt.sty[xa - 1][ya] = '#6f827a';\r\n                let sr = stt.sty;\r\n                  setstt({\r\n                sty : sr,\r\n              })\r\n             }, 1000);\r\n              //  setstt({\r\n              //    sty : sr,\r\n              //  }) \r\n            // console.log((xa - 1 )+\" , \"+ya);\r\n            // step++;\r\n            // console.table(me);\r\n        }else{\r\n          if( me[xa - 1][ya] == 0 && grid.mat[xa  - 1][ya] == 3 )\r\n              { \r\n                // console.log(\"found with \"+ pa[xa][ya] +\" steps\" );\r\n              //  step = 0;\r\n               break;\r\n            }\r\n         }\r\n        }\r\n\r\n        if(xa + 1 >=0 && xa + 1 < row.len){\r\n         if(me[xa + 1][ya] == 0 && grid.mat[xa + 1][ya] == 0){\r\n         me[xa + 1][ya] = 1;         \r\n         a.push(xa + 1);\r\n         b.push(ya);  \r\n         pa[xa + 1][ya] =  1 + pa[xa][ya];  \r\n \r\n         setTimeout( () => \r\n         {\r\n          stt.sty[xa + 1][ya] = '#6f827a';\r\n          let sr = stt.sty;\r\n           setstt({\r\n          sty : sr,\r\n        }) }, 1000);\r\n  \r\n        //  console.log((xa + 1) +\" , \"+ya);\r\n\r\n        }else{\r\n          if( me[xa + 1][ya ] == 0 && grid.mat[xa + 1][ya] == 3 )\r\n         { \r\n          //  console.log(\"found with \"+ pa[xa][ya]  +\" steps\" );\r\n          break;\r\n         }}\r\n        }\r\n         \r\n        if(ya + 1 >=0 && ya + 1 < row.len){\r\n         if(me[xa ][ya + 1] == 0 && grid.mat[xa ][ya + 1] == 0){\r\n         me[xa ][ya + 1] = 1;\r\n         a.push(xa);\r\n            b.push(ya + 1); \r\n            pa[xa][ya + 1] =  1 + pa[xa][ya];  \r\n  \r\n            setTimeout( () => { \r\n              stt.sty[xa][ya + 1] = '#6f827a';\r\n              let sr = stt.sty;\r\n              setstt({\r\n              sty : sr,\r\n            }) }, 1000);\r\n  \r\n            // console.log(xa  +\" , \"+ (ya + 1) );\r\n\r\n        }else{\r\n          if( me[xa ][ya + 1] == 0 && grid.mat[xa ][ya + 1] == 3 )\r\n         { \r\n          //  console.log(\"found with \"+ pa[xa][ya]  +\" steps\" );\r\n          // step = 0;\r\n          break;\r\n         }}\r\n      }\r\n\r\n      if(ya - 1 >=0 && ya - 1 < row.len){\r\n           if(me[xa ][ya - 1] == 0 && grid.mat[xa ][ya - 1] == 0){\r\n           me[xa ][ya - 1] = 1;\r\n           a.push(xa );\r\n           b.push(ya - 1);  \r\n           pa[xa][ya - 1] =  1 + pa[xa][ya];  \r\n\r\n           setTimeout(() => { \r\n            stt.sty[xa][ya - 1] = '#6f827a';\r\n            let sr = stt.sty; \r\n            setstt({\r\n            sty : sr,\r\n          }) }, 1000);\r\n         \r\n          //  console.log(xa +\" , \"+ (ya - 1 ));\r\n\r\n  \r\n          }else{\r\n           if( me[xa ][ya - 1] == 0 && grid.mat[xa ][ya - 1] == 3 )\r\n           {\r\n            //  console.log(\"found with \"+ pa[xa][ya] +\" steps\" );\r\n    \r\n           break;\r\n          }\r\n          }\r\n      }\r\n\r\n   }\r\n  //  console.table(me);\r\n  //  DFS();\r\n  }\r\n\r\n//=====================================================\r\n  const xpath=[];\r\n const DFS = (x,y) => {\r\n\r\n  //  console.log(\"hy\");\r\n  \r\n    // vis[x][y] = 1;\r\n    DFA(x,y);\r\n  //  xpath.push( DFA(x,y) );\r\n  //  console.log(xpath);\r\n  // console.log(alx);\r\n   disp();\r\n   \r\n }\r\n\r\n let fo = 0;\r\n//=====================================================\r\nconst alx=[];\r\n   const DFA = (q,w) => {\r\n   \r\n      //  vis[q][w] = 1;\r\n     let dx = [1,-1,0,0];\r\n     let dy = [0,0,1,-1];\r\n// \r\n    //  if(q + 1 >=0 && q + 1 < row.len && w >=0 && w <row.len)\r\n    //  {\r\n    //       DFA(q+1 )\r\n    //  }\r\n\r\n\r\n    \r\n\r\n   for(let rt=0;rt<4;rt++)\r\n   {\r\n    \r\n       let sx = dx[rt] + q;\r\n       let sy = dy[rt] + w ;\r\n       if( sx>=0 && sy>=0 && sx<row.len && sy<row.len){\r\n       if(vis.vi[sx][sy] == 0 && grid.mat[sx][sy] == 3 )\r\n       {\r\n\r\n        //  vis.vi[sx][sy] = 1;\r\n        //  let yy = vis.vi;\r\n        //  setvis({\r\n        //    vi:yy\r\n        //  }); \r\n        // //  console.log(\" x cor :\"+sx+\"   y cor: \"+sy);\r\n        //     DFA(sx,sy);\r\n        //     if(fo == 1)\r\n        //    return alx.push(`x cor :  ${sx}  y cor :${sy}`); \r\n\r\n           fo = 1;\r\n           let cc ={\r\n            x : sx,\r\n            y : sy\r\n          }\r\n          return alx.push(cc);\r\n          //  return  alx.push(`x cor :  ${sx}  y cor :${sy}`);\r\n\r\n\r\n       }\r\n      \r\n       else{\r\n         if(vis.vi[sx][sy] == 0 && grid.mat[sx][sy] == 0)\r\n            {\r\n              // fo = 1;\r\n              //  return  alx.push(`x cor :  ${sx}  y cor :${sy}`);\r\n\r\n\r\n              vis.vi[sx][sy] = 1;\r\n              let yy = vis.vi;\r\n              setvis({\r\n                vi:yy\r\n              }); \r\n             //  console.log(\" x cor :\"+sx+\"   y cor: \"+sy);\r\n                 DFA(sx,sy);\r\n                 if(fo == 1){\r\n                   let c ={\r\n                     x : sx,\r\n                     y : sy\r\n                   }\r\n                  return alx.push(c);\r\n                 }\r\n                // return alx.push(`x cor :  ${sx}  y cor :${sy}`); \r\n\r\n\r\n\r\n\r\n\r\n\r\n              }\r\n              // else{\r\n              //   return false;\r\n              // }\r\n         \r\n             \r\n       }\r\n      }\r\n   }\r\n  }\r\n\r\n  // console.table( vis);\r\n\r\n  const disp = () => {\r\n   \r\n    for(let op = 1;op< alx.length;op++)\r\n    {\r\n       let xa = alx[op].x;\r\n       let ya = alx[op].y;\r\n\r\n      setTimeout( () => { \r\n        stt.sty[xa][ya] = 'gold';\r\n        let sr = stt.sty;\r\n        setstt({\r\n        sty : sr,\r\n      }) }, 2000); \r\n\r\n\r\n    }\r\n \r\n\r\n  }\r\n\r\n\r\n  //  }\r\n\r\n\r\n//=====================================================\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Hee/>\r\n      <br/>\r\n      <Inp gete={getp} /><br/>\r\n      {/* <button onClick={ta}>table set</button> */}\r\n      <div id=\"ree\">\r\n      <button id=\"obs\" onClick={setterO}>Obtacles</button>&nbsp;&nbsp;\r\n      <button id=\"sp\" onClick={setterS}>Start Point</button>&nbsp;&nbsp;\r\n      <button id=\"ep\" onClick={setterE}>End Point</button>&nbsp;&nbsp;\r\n      <button id=\"se\" onClick={find}>SEARCH</button>\r\n      </div>\r\n      <br/><br/>\r\n      <div className=\"tb\">\r\n      <table>\r\n      {table}\r\n      </table>\r\n      </div>\r\n      <Inf set={hid.h} />\r\n      {/* style={ { display: `${hid.h}` } } */}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}